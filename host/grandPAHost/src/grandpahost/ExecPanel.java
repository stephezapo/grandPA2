/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grandpahost;


import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;


/**
 *
 * @author Stephan Zapotocky / zactrack.com
 */
public class ExecPanel extends javax.swing.JPanel implements MouseListener, ChangeListener
{
    int index = 0;
    /**
     * Creates new form ExecPanel
     */
    public ExecPanel()
    {
        initComponents();
    }

    public ExecPanel(int index)
    {
        initComponents();
        this.index = index;
        
        buttonEx3.addMouseListener(this);
        buttonEx2.addMouseListener(this);
        buttonEx1.addMouseListener(this);
        buttonEx4.addMouseListener(this);
        
        buttonEx3.setText(String.valueOf(1+index));
        buttonEx2.setText(String.valueOf(1+index));
        buttonEx1.setText(String.valueOf(1+index));
        buttonEx4.setText(String.valueOf(101+index));
        
        sliderEx.addChangeListener(this);
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonEx3 = new javax.swing.JButton();
        buttonEx2 = new javax.swing.JButton();
        sliderEx = new javax.swing.JSlider();
        buttonEx1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        buttonEx4 = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 102, 102));
        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        buttonEx3.setText("1");
        buttonEx3.setPreferredSize(new java.awt.Dimension(39, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(buttonEx3, gridBagConstraints);

        buttonEx2.setText("1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(buttonEx2, gridBagConstraints);

        sliderEx.setMajorTickSpacing(16);
        sliderEx.setMaximum(255);
        sliderEx.setOrientation(javax.swing.JSlider.VERTICAL);
        sliderEx.setPaintTicks(true);
        sliderEx.setValue(0);
        sliderEx.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 164;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(sliderEx, gridBagConstraints);

        buttonEx1.setText("1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(buttonEx1, gridBagConstraints);

        jSeparator1.setMinimumSize(new java.awt.Dimension(10, 10));
        jSeparator1.setPreferredSize(new java.awt.Dimension(1, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(jSeparator1, gridBagConstraints);

        buttonEx4.setText("101");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(buttonEx4, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEx1;
    private javax.swing.JButton buttonEx2;
    private javax.swing.JButton buttonEx3;
    private javax.swing.JButton buttonEx4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSlider sliderEx;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent me)
    {
        
    }

    @Override
    public void mousePressed(MouseEvent me)
    {
        if(me.getSource().equals(buttonEx3))
            Artnet.Get().sendArtnet(index*5+5, 255);
            //MIDI.sendNoteMessage((short)1, (short)(3+index*3), (short)127, false);
        else if(me.getSource().equals(buttonEx2))
            Artnet.Get().sendArtnet(index*5+4, 255);
            //MIDI.sendNoteMessage((short)1, (short)(2+index*3), (short)127, false);
        else if(me.getSource().equals(buttonEx1))
            Artnet.Get().sendArtnet(index*5+2, 255);
            //MIDI.sendNoteMessage((short)1, (short)(1+index*3), (short)127, false);
        else if(me.getSource().equals(buttonEx4))
            Artnet.Get().sendArtnet(index*5+1, 255);
            //MIDI.sendNoteMessage((short)1, (short)(101+index), (short)127, false);
    }

    @Override
    public void mouseReleased(MouseEvent me)
    {
        if(me.getSource().equals(buttonEx3))
            Artnet.Get().sendArtnet(index*5+5, 0);
            //MIDI.sendNoteMessage((short)1, (short)(3+index*3), (short)0, true);
        else if(me.getSource().equals(buttonEx2))
            Artnet.Get().sendArtnet(index*5+4, 0);
            //MIDI.sendNoteMessage((short)1, (short)(2+index*3), (short)0, true);
        else if(me.getSource().equals(buttonEx1))
            Artnet.Get().sendArtnet(index*5+2, 0);
            //MIDI.sendNoteMessage((short)1, (short)(1+index*3), (short)0, true);
        else if(me.getSource().equals(buttonEx4))
            Artnet.Get().sendArtnet(index*5+1, 0);
            //MIDI.sendNoteMessage((short)1, (short)(101+index), (short)0, true);
    }

    @Override
    public void mouseEntered(MouseEvent me)
    {
        
    }

    @Override
    public void mouseExited(MouseEvent me)
    {
        
    }

    @Override
    public void stateChanged(ChangeEvent ce)
    {
        if(ce.getSource().equals(sliderEx))
        {
            Artnet.Get().sendArtnet(index*5+3, sliderEx.getValue());
            //MIDI.sendNoteMessage((short)1, (short)(51+index), (short)sliderEx.getValue(), false);
        }
        
    }
}