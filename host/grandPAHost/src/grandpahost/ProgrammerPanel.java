/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grandpahost;


import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;


/**
 *
 * @author Stephan Zapotocky / zactrack.com
 */
public class ProgrammerPanel extends javax.swing.JPanel implements MouseListener, ChangeListener
{
    /**
     * Creates new form ProgrammerPanel
     */
    public ProgrammerPanel()
    {
        initComponents();
        
        //Block 1
        buttonFix.addMouseListener(this);
        buttonSelect.addMouseListener(this);
        buttonOff.addMouseListener(this);
        buttonTemp.addMouseListener(this);
        buttonTop.addMouseListener(this);
        buttonOn.addMouseListener(this);
        buttonBackFast.addMouseListener(this);
        buttonLearn.addMouseListener(this);
        buttonForwardFast.addMouseListener(this);
        buttonGoMinus.addMouseListener(this);
        buttonPause.addMouseListener(this);
        buttonGoPlus.addMouseListener(this);
        
        //Block 2
        buttonView.addMouseListener(this);
        buttonEffect.addMouseListener(this);
        buttonGoto.addMouseListener(this);
        buttonPage.addMouseListener(this);
        buttonMacro.addMouseListener(this);
        buttonPreset.addMouseListener(this);
        buttonSequ.addMouseListener(this);
        buttonCue.addMouseListener(this);
        buttonExec.addMouseListener(this);
        buttonChannel.addMouseListener(this);
        buttonFixture.addMouseListener(this);
        buttonGroup.addMouseListener(this);
        
        //Block 3
        buttonDel.addMouseListener(this);
        buttonBlind.addMouseListener(this);
        buttonCopy.addMouseListener(this);
        buttonFreeze.addMouseListener(this);
        buttonMove.addMouseListener(this);
        buttonPrvw.addMouseListener(this);
        buttonAssign.addMouseListener(this);
        buttonAlign.addMouseListener(this);
        
        //Block 4
        buttonTime.addMouseListener(this);
        buttonEsc.addMouseListener(this);
        buttonEdit.addMouseListener(this);
        buttonOops.addMouseListener(this);
        buttonUpdate.addMouseListener(this);
        buttonClear.addMouseListener(this);
        buttonStore.addMouseListener(this);
        
        //Block 5
        button0.addMouseListener(this);
        button1.addMouseListener(this);
        button2.addMouseListener(this);
        button3.addMouseListener(this);
        button4.addMouseListener(this);
        button5.addMouseListener(this);
        button6.addMouseListener(this);
        button7.addMouseListener(this);
        button8.addMouseListener(this);
        button9.addMouseListener(this);
        buttonPlus.addMouseListener(this);
        buttonMinus.addMouseListener(this);
        buttonDot.addMouseListener(this);
        buttonThru.addMouseListener(this);
        buttonAt.addMouseListener(this);
        buttonIf.addMouseListener(this);
        buttonMa.addMouseListener(this);
        buttonPlease.addMouseListener(this);
        
        //Block 6
        buttonFull.addMouseListener(this);
        buttonHighlt.addMouseListener(this);
        buttonSolo.addMouseListener(this);
        buttonUp.addMouseListener(this);
        buttonPrev.addMouseListener(this);
        buttonSet.addMouseListener(this);
        buttonNext.addMouseListener(this);
        buttonDown.addMouseListener(this);
        
        //Block 7
        buttonTools.addMouseListener(this);
        buttonSetup.addMouseListener(this);
        buttonBackup.addMouseListener(this);
        buttonBlackout.addMouseListener(this);
        
        sliderGrandMaster.addChangeListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        block1 = new javax.swing.JPanel();
        buttonGoMinus = new javax.swing.JButton();
        buttonBackFast = new javax.swing.JButton();
        buttonLearn = new javax.swing.JButton();
        buttonForwardFast = new javax.swing.JButton();
        buttonTemp = new javax.swing.JButton();
        buttonTop = new javax.swing.JButton();
        buttonOn = new javax.swing.JButton();
        buttonFix = new javax.swing.JButton();
        buttonSelect = new javax.swing.JButton();
        buttonOff = new javax.swing.JButton();
        buttonPause = new javax.swing.JButton();
        buttonGoPlus = new javax.swing.JButton();
        block2 = new javax.swing.JPanel();
        buttonChannel = new javax.swing.JButton();
        buttonSequ = new javax.swing.JButton();
        buttonCue = new javax.swing.JButton();
        buttonExec = new javax.swing.JButton();
        buttonPage = new javax.swing.JButton();
        buttonMacro = new javax.swing.JButton();
        buttonPreset = new javax.swing.JButton();
        buttonView = new javax.swing.JButton();
        buttonEffect = new javax.swing.JButton();
        buttonGoto = new javax.swing.JButton();
        buttonFixture = new javax.swing.JButton();
        buttonGroup = new javax.swing.JButton();
        block3 = new javax.swing.JPanel();
        buttonMove = new javax.swing.JButton();
        buttonPrvw = new javax.swing.JButton();
        buttonCopy = new javax.swing.JButton();
        buttonFreeze = new javax.swing.JButton();
        buttonDel = new javax.swing.JButton();
        buttonBlind = new javax.swing.JButton();
        buttonAssign = new javax.swing.JButton();
        buttonAlign = new javax.swing.JButton();
        block4 = new javax.swing.JPanel();
        buttonUpdate = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();
        buttonEdit = new javax.swing.JButton();
        buttonOops = new javax.swing.JButton();
        buttonTime = new javax.swing.JButton();
        buttonEsc = new javax.swing.JButton();
        buttonStore = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        block5 = new javax.swing.JPanel();
        button0 = new javax.swing.JButton();
        button1 = new javax.swing.JButton();
        button2 = new javax.swing.JButton();
        button3 = new javax.swing.JButton();
        button4 = new javax.swing.JButton();
        button5 = new javax.swing.JButton();
        button6 = new javax.swing.JButton();
        button7 = new javax.swing.JButton();
        button8 = new javax.swing.JButton();
        button9 = new javax.swing.JButton();
        buttonPlus = new javax.swing.JButton();
        buttonMinus = new javax.swing.JButton();
        buttonDot = new javax.swing.JButton();
        buttonAt = new javax.swing.JButton();
        buttonIf = new javax.swing.JButton();
        buttonThru = new javax.swing.JButton();
        buttonPlease = new javax.swing.JButton();
        buttonMa = new javax.swing.JButton();
        block6 = new javax.swing.JPanel();
        buttonPrev = new javax.swing.JButton();
        buttonUp = new javax.swing.JButton();
        buttonFull = new javax.swing.JButton();
        buttonHighlt = new javax.swing.JButton();
        buttonSolo = new javax.swing.JButton();
        buttonSet = new javax.swing.JButton();
        buttonNext = new javax.swing.JButton();
        buttonDown = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        block7 = new javax.swing.JPanel();
        buttonTools = new javax.swing.JButton();
        buttonSetup = new javax.swing.JButton();
        buttonBlackout = new javax.swing.JButton();
        buttonBackup = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        sliderGrandMaster = new javax.swing.JSlider();
        wheel1Left = new javax.swing.JButton();
        wheel1Right = new javax.swing.JButton();
        wheel2Left = new javax.swing.JButton();
        wheel2Right = new javax.swing.JButton();
        wheel3Left = new javax.swing.JButton();
        wheel3Right = new javax.swing.JButton();
        wheel4Left = new javax.swing.JButton();
        wheel4Right = new javax.swing.JButton();

        setOpaque(false);

        block1.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        block1.setPreferredSize(new java.awt.Dimension(180, 112));
        block1.setLayout(new java.awt.GridBagLayout());

        buttonGoMinus.setText("Go -");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block1.add(buttonGoMinus, gridBagConstraints);

        buttonBackFast.setText("<<<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block1.add(buttonBackFast, gridBagConstraints);

        buttonLearn.setText("Learn");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block1.add(buttonLearn, gridBagConstraints);

        buttonForwardFast.setText(">>>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block1.add(buttonForwardFast, gridBagConstraints);

        buttonTemp.setText("Temp");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block1.add(buttonTemp, gridBagConstraints);

        buttonTop.setText("Top");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block1.add(buttonTop, gridBagConstraints);

        buttonOn.setText("On");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block1.add(buttonOn, gridBagConstraints);

        buttonFix.setText("Fix");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block1.add(buttonFix, gridBagConstraints);

        buttonSelect.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block1.add(buttonSelect, gridBagConstraints);

        buttonOff.setText("Off");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block1.add(buttonOff, gridBagConstraints);

        buttonPause.setText("Pause");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block1.add(buttonPause, gridBagConstraints);

        buttonGoPlus.setText("Go +");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block1.add(buttonGoPlus, gridBagConstraints);

        block2.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        block2.setPreferredSize(new java.awt.Dimension(200, 112));
        block2.setLayout(new java.awt.GridBagLayout());

        buttonChannel.setText("Channel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block2.add(buttonChannel, gridBagConstraints);

        buttonSequ.setText("Sequ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block2.add(buttonSequ, gridBagConstraints);

        buttonCue.setText("Cue");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block2.add(buttonCue, gridBagConstraints);

        buttonExec.setText("Exec");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block2.add(buttonExec, gridBagConstraints);

        buttonPage.setText("Page");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block2.add(buttonPage, gridBagConstraints);

        buttonMacro.setText("Macro");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block2.add(buttonMacro, gridBagConstraints);

        buttonPreset.setText("Preset");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block2.add(buttonPreset, gridBagConstraints);

        buttonView.setText("View");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block2.add(buttonView, gridBagConstraints);

        buttonEffect.setText("Effect");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block2.add(buttonEffect, gridBagConstraints);

        buttonGoto.setText("Goto");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block2.add(buttonGoto, gridBagConstraints);

        buttonFixture.setText("Fixture");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block2.add(buttonFixture, gridBagConstraints);

        buttonGroup.setText("Group");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block2.add(buttonGroup, gridBagConstraints);

        block3.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        block3.setPreferredSize(new java.awt.Dimension(200, 112));
        block3.setLayout(new java.awt.GridBagLayout());

        buttonMove.setText("Move");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block3.add(buttonMove, gridBagConstraints);

        buttonPrvw.setText("Prvw");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block3.add(buttonPrvw, gridBagConstraints);

        buttonCopy.setText("Copy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block3.add(buttonCopy, gridBagConstraints);

        buttonFreeze.setText("Freeze");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block3.add(buttonFreeze, gridBagConstraints);

        buttonDel.setText("Del");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block3.add(buttonDel, gridBagConstraints);

        buttonBlind.setText("Blind");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block3.add(buttonBlind, gridBagConstraints);

        buttonAssign.setText("Assign");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block3.add(buttonAssign, gridBagConstraints);

        buttonAlign.setText("Align");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block3.add(buttonAlign, gridBagConstraints);

        block4.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        block4.setOpaque(false);
        block4.setLayout(new java.awt.GridBagLayout());

        buttonUpdate.setText("Update");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block4.add(buttonUpdate, gridBagConstraints);

        buttonClear.setText("Clear");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block4.add(buttonClear, gridBagConstraints);

        buttonEdit.setText("Edit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block4.add(buttonEdit, gridBagConstraints);

        buttonOops.setText("Oops");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block4.add(buttonOops, gridBagConstraints);

        buttonTime.setText("Time");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block4.add(buttonTime, gridBagConstraints);

        buttonEsc.setText("Esc");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block4.add(buttonEsc, gridBagConstraints);

        buttonStore.setText("Store");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block4.add(buttonStore, gridBagConstraints);

        jPanel1.setPreferredSize(new java.awt.Dimension(10, 23));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        block4.add(jPanel1, gridBagConstraints);

        block5.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        block5.setPreferredSize(new java.awt.Dimension(200, 135));
        block5.setLayout(new java.awt.GridBagLayout());

        button0.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(button0, gridBagConstraints);

        button1.setText("1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(button1, gridBagConstraints);

        button2.setText("2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(button2, gridBagConstraints);

        button3.setText("3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(button3, gridBagConstraints);

        button4.setText("4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(button4, gridBagConstraints);

        button5.setText("5");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(button5, gridBagConstraints);

        button6.setText("6");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(button6, gridBagConstraints);

        button7.setText("7");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(button7, gridBagConstraints);

        button8.setText("8");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(button8, gridBagConstraints);

        button9.setText("9");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(button9, gridBagConstraints);

        buttonPlus.setText("+");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(buttonPlus, gridBagConstraints);

        buttonMinus.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(buttonMinus, gridBagConstraints);

        buttonDot.setText(".");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(buttonDot, gridBagConstraints);

        buttonAt.setText("AT");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(buttonAt, gridBagConstraints);

        buttonIf.setText("IF");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(buttonIf, gridBagConstraints);

        buttonThru.setText("THRU");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(buttonThru, gridBagConstraints);

        buttonPlease.setText("PLEASE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(buttonPlease, gridBagConstraints);

        buttonMa.setText("MA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block5.add(buttonMa, gridBagConstraints);

        block6.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        block6.setPreferredSize(new java.awt.Dimension(200, 135));
        block6.setLayout(new java.awt.GridBagLayout());

        buttonPrev.setText("Prev");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block6.add(buttonPrev, gridBagConstraints);

        buttonUp.setText("Up");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block6.add(buttonUp, gridBagConstraints);

        buttonFull.setText("Full");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block6.add(buttonFull, gridBagConstraints);

        buttonHighlt.setText("Highlt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block6.add(buttonHighlt, gridBagConstraints);

        buttonSolo.setText("Solo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block6.add(buttonSolo, gridBagConstraints);

        buttonSet.setText("Set");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block6.add(buttonSet, gridBagConstraints);

        buttonNext.setText("Next");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block6.add(buttonNext, gridBagConstraints);

        buttonDown.setText("Down");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        block6.add(buttonDown, gridBagConstraints);

        jPanel2.setPreferredSize(new java.awt.Dimension(43, 23));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        block6.add(jPanel2, gridBagConstraints);

        block7.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        block7.setPreferredSize(new java.awt.Dimension(200, 89));
        block7.setLayout(new java.awt.GridBagLayout());

        buttonTools.setText("Tools");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block7.add(buttonTools, gridBagConstraints);

        buttonSetup.setText("Setup");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block7.add(buttonSetup, gridBagConstraints);

        buttonBlackout.setText("B.O.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block7.add(buttonBlackout, gridBagConstraints);

        buttonBackup.setText("Backup");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        block7.add(buttonBackup, gridBagConstraints);

        jPanel3.setPreferredSize(new java.awt.Dimension(43, 23));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        block7.add(jPanel3, gridBagConstraints);

        sliderGrandMaster.setMajorTickSpacing(100);
        sliderGrandMaster.setMaximum(1000);
        sliderGrandMaster.setMinorTickSpacing(50);
        sliderGrandMaster.setOrientation(javax.swing.JSlider.VERTICAL);
        sliderGrandMaster.setPaintTicks(true);
        sliderGrandMaster.setValue(0);

        wheel1Left.setText("<");
        wheel1Left.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                wheel1LeftActionPerformed(evt);
            }
        });

        wheel1Right.setText(">");
        wheel1Right.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                wheel1RightActionPerformed(evt);
            }
        });

        wheel2Left.setText("<");
        wheel2Left.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                wheel2LeftActionPerformed(evt);
            }
        });

        wheel2Right.setText(">");
        wheel2Right.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                wheel2RightActionPerformed(evt);
            }
        });

        wheel3Left.setText("<");
        wheel3Left.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                wheel3LeftActionPerformed(evt);
            }
        });

        wheel3Right.setText(">");
        wheel3Right.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                wheel3RightActionPerformed(evt);
            }
        });

        wheel4Left.setText("<");
        wheel4Left.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                wheel4LeftActionPerformed(evt);
            }
        });

        wheel4Right.setText(">");
        wheel4Right.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                wheel4RightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(block1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(block4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(block2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(block5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(block3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(block6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(wheel1Left, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wheel1Right, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(wheel2Left, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wheel2Right, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(wheel3Left, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wheel3Right, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(wheel4Left, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wheel4Right, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(block7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sliderGrandMaster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(wheel1Left)
                            .addComponent(wheel1Right)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(wheel2Left)
                                .addComponent(wheel2Right)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(wheel3Left)
                                    .addComponent(wheel3Right)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(wheel4Left)
                                        .addComponent(wheel4Right)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(block1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(block2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(block3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(block4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(block6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(block5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(block7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sliderGrandMaster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void wheel1LeftActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_wheel1LeftActionPerformed
    {//GEN-HEADEREND:event_wheel1LeftActionPerformed
        GrandPAHost.Send("gma.canbus.encoder(0, -1, pressed)", true);
    }//GEN-LAST:event_wheel1LeftActionPerformed

    private void wheel1RightActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_wheel1RightActionPerformed
    {//GEN-HEADEREND:event_wheel1RightActionPerformed
        GrandPAHost.Send("gma.canbus.encoder(0, 1, pressed)", true);
    }//GEN-LAST:event_wheel1RightActionPerformed

    private void wheel2LeftActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_wheel2LeftActionPerformed
    {//GEN-HEADEREND:event_wheel2LeftActionPerformed
        GrandPAHost.Send("gma.canbus.encoder(1, -1, pressed)", true);
    }//GEN-LAST:event_wheel2LeftActionPerformed

    private void wheel2RightActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_wheel2RightActionPerformed
    {//GEN-HEADEREND:event_wheel2RightActionPerformed
        GrandPAHost.Send("gma.canbus.encoder(1, 1, pressed)", true);
    }//GEN-LAST:event_wheel2RightActionPerformed

    private void wheel3LeftActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_wheel3LeftActionPerformed
    {//GEN-HEADEREND:event_wheel3LeftActionPerformed
        GrandPAHost.Send("gma.canbus.encoder(2, -1, pressed)", true);
    }//GEN-LAST:event_wheel3LeftActionPerformed

    private void wheel3RightActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_wheel3RightActionPerformed
    {//GEN-HEADEREND:event_wheel3RightActionPerformed
        GrandPAHost.Send("gma.canbus.encoder(2, 1, pressed)", true);
    }//GEN-LAST:event_wheel3RightActionPerformed

    private void wheel4LeftActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_wheel4LeftActionPerformed
    {//GEN-HEADEREND:event_wheel4LeftActionPerformed
        GrandPAHost.Send("gma.canbus.encoder(3, -1, pressed)", true);
    }//GEN-LAST:event_wheel4LeftActionPerformed

    private void wheel4RightActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_wheel4RightActionPerformed
    {//GEN-HEADEREND:event_wheel4RightActionPerformed
        GrandPAHost.Send("gma.canbus.encoder(3, 1, pressed)",true);
    }//GEN-LAST:event_wheel4RightActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel block1;
    private javax.swing.JPanel block2;
    private javax.swing.JPanel block3;
    private javax.swing.JPanel block4;
    private javax.swing.JPanel block5;
    private javax.swing.JPanel block6;
    private javax.swing.JPanel block7;
    private javax.swing.JButton button0;
    private javax.swing.JButton button1;
    private javax.swing.JButton button2;
    private javax.swing.JButton button3;
    private javax.swing.JButton button4;
    private javax.swing.JButton button5;
    private javax.swing.JButton button6;
    private javax.swing.JButton button7;
    private javax.swing.JButton button8;
    private javax.swing.JButton button9;
    private javax.swing.JButton buttonAlign;
    private javax.swing.JButton buttonAssign;
    private javax.swing.JButton buttonAt;
    private javax.swing.JButton buttonBackFast;
    private javax.swing.JButton buttonBackup;
    private javax.swing.JButton buttonBlackout;
    private javax.swing.JButton buttonBlind;
    private javax.swing.JButton buttonChannel;
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonCopy;
    private javax.swing.JButton buttonCue;
    private javax.swing.JButton buttonDel;
    private javax.swing.JButton buttonDot;
    private javax.swing.JButton buttonDown;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JButton buttonEffect;
    private javax.swing.JButton buttonEsc;
    private javax.swing.JButton buttonExec;
    private javax.swing.JButton buttonFix;
    private javax.swing.JButton buttonFixture;
    private javax.swing.JButton buttonForwardFast;
    private javax.swing.JButton buttonFreeze;
    private javax.swing.JButton buttonFull;
    private javax.swing.JButton buttonGoMinus;
    private javax.swing.JButton buttonGoPlus;
    private javax.swing.JButton buttonGoto;
    private javax.swing.JButton buttonGroup;
    private javax.swing.JButton buttonHighlt;
    private javax.swing.JButton buttonIf;
    private javax.swing.JButton buttonLearn;
    private javax.swing.JButton buttonMa;
    private javax.swing.JButton buttonMacro;
    private javax.swing.JButton buttonMinus;
    private javax.swing.JButton buttonMove;
    private javax.swing.JButton buttonNext;
    private javax.swing.JButton buttonOff;
    private javax.swing.JButton buttonOn;
    private javax.swing.JButton buttonOops;
    private javax.swing.JButton buttonPage;
    private javax.swing.JButton buttonPause;
    private javax.swing.JButton buttonPlease;
    private javax.swing.JButton buttonPlus;
    private javax.swing.JButton buttonPreset;
    private javax.swing.JButton buttonPrev;
    private javax.swing.JButton buttonPrvw;
    private javax.swing.JButton buttonSelect;
    private javax.swing.JButton buttonSequ;
    private javax.swing.JButton buttonSet;
    private javax.swing.JButton buttonSetup;
    private javax.swing.JButton buttonSolo;
    private javax.swing.JButton buttonStore;
    private javax.swing.JButton buttonTemp;
    private javax.swing.JButton buttonThru;
    private javax.swing.JButton buttonTime;
    private javax.swing.JButton buttonTools;
    private javax.swing.JButton buttonTop;
    private javax.swing.JButton buttonUp;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JButton buttonView;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSlider sliderGrandMaster;
    private javax.swing.JButton wheel1Left;
    private javax.swing.JButton wheel1Right;
    private javax.swing.JButton wheel2Left;
    private javax.swing.JButton wheel2Right;
    private javax.swing.JButton wheel3Left;
    private javax.swing.JButton wheel3Right;
    private javax.swing.JButton wheel4Left;
    private javax.swing.JButton wheel4Right;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent me)
    {
        
    }

    @Override
    public void mousePressed(MouseEvent me)
    {
        //BLOCK 1
        if(me.getSource().equals(buttonFix))
            Artnet.Get().sendArtnet(157, 255);
            //MIDI.sendNoteMessage((short)0, (short)1, (short)127, false);
        else if(me.getSource().equals(buttonSelect))
            Artnet.Get().sendArtnet(158, 255);
            //MIDI.sendNoteMessage((short)0, (short)2, (short)127, false);
        else if(me.getSource().equals(buttonOff))
            Artnet.Get().sendArtnet(159, 255);
            //MIDI.sendNoteMessage((short)0, (short)3, (short)127, false);
        else if(me.getSource().equals(buttonTemp))
            Artnet.Get().sendArtnet(160, 255);
            //MIDI.sendNoteMessage((short)0, (short)4, (short)127, false);
        else if(me.getSource().equals(buttonTop))
            Artnet.Get().sendArtnet(161, 255);
            //MIDI.sendNoteMessage((short)0, (short)5, (short)127, false);
        else if(me.getSource().equals(buttonOn))
            Artnet.Get().sendArtnet(162, 255);
            //MIDI.sendNoteMessage((short)0, (short)6, (short)127, false);
        else if(me.getSource().equals(buttonBackFast))
            Artnet.Get().sendArtnet(163, 255);
            //MIDI.sendNoteMessage((short)0, (short)7, (short)127, false);
        else if(me.getSource().equals(buttonLearn))
            Artnet.Get().sendArtnet(164, 255);
            //MIDI.sendNoteMessage((short)0, (short)8, (short)127, false);
        else if(me.getSource().equals(buttonForwardFast))
            Artnet.Get().sendArtnet(165, 255);
            //MIDI.sendNoteMessage((short)0, (short)9, (short)127, false);
        else if(me.getSource().equals(buttonGoMinus))
            Artnet.Get().sendArtnet(166, 255);
            //MIDI.sendNoteMessage((short)0, (short)10, (short)127, false);
        else if(me.getSource().equals(buttonPause))
            Artnet.Get().sendArtnet(167, 255);
            //MIDI.sendNoteMessage((short)0, (short)11, (short)127, false);
        else if(me.getSource().equals(buttonGoPlus))
            Artnet.Get().sendArtnet(168, 255);
            //MIDI.sendNoteMessage((short)0, (short)12, (short)127, false);
        
         //Block 2
         else if(me.getSource().equals(buttonView))
             Artnet.Get().sendArtnet(169, 255);
            //MIDI.sendNoteMessage((short)0, (short)13, (short)127, false);
        else if(me.getSource().equals(buttonEffect))
            Artnet.Get().sendArtnet(170, 255);
            //MIDI.sendNoteMessage((short)0, (short)14, (short)127, false);
        else if(me.getSource().equals(buttonGoto))
            Artnet.Get().sendArtnet(171, 255);
            //MIDI.sendNoteMessage((short)0, (short)15, (short)127, false);
        else if(me.getSource().equals(buttonPage))
            Artnet.Get().sendArtnet(172, 255);
            //MIDI.sendNoteMessage((short)0, (short)16, (short)127, false);
        else if(me.getSource().equals(buttonMacro))
            Artnet.Get().sendArtnet(173, 255);
            //MIDI.sendNoteMessage((short)0, (short)17, (short)127, false);
        else if(me.getSource().equals(buttonPreset))
            Artnet.Get().sendArtnet(174, 255);
            //MIDI.sendNoteMessage((short)0, (short)18, (short)127, false);
        else if(me.getSource().equals(buttonSequ))
            Artnet.Get().sendArtnet(175, 255);
            //MIDI.sendNoteMessage((short)0, (short)19, (short)127, false);
        else if(me.getSource().equals(buttonCue))
            Artnet.Get().sendArtnet(176, 255);
            //MIDI.sendNoteMessage((short)0, (short)20, (short)127, false);
        else if(me.getSource().equals(buttonExec))
            Artnet.Get().sendArtnet(177, 255);
            //MIDI.sendNoteMessage((short)0, (short)21, (short)127, false);
        else if(me.getSource().equals(buttonChannel))
            Artnet.Get().sendArtnet(178, 255);
            //MIDI.sendNoteMessage((short)0, (short)22, (short)127, false);
        else if(me.getSource().equals(buttonFixture))
            Artnet.Get().sendArtnet(179, 255);
            //MIDI.sendNoteMessage((short)0, (short)23, (short)127, false);
        else if(me.getSource().equals(buttonGroup))
            Artnet.Get().sendArtnet(180, 255);
            //MIDI.sendNoteMessage((short)0, (short)24, (short)127, false);
        
        //Block 3
         else if(me.getSource().equals(buttonDel))
             Artnet.Get().sendArtnet(181, 255);
            //MIDI.sendNoteMessage((short)0, (short)25, (short)127, false);
        else if(me.getSource().equals(buttonBlind))
            Artnet.Get().sendArtnet(182, 255);
            //MIDI.sendNoteMessage((short)0, (short)26, (short)127, false);
        else if(me.getSource().equals(buttonCopy))
            Artnet.Get().sendArtnet(183, 255);
            //MIDI.sendNoteMessage((short)0, (short)27, (short)127, false);
        else if(me.getSource().equals(buttonFreeze))
            Artnet.Get().sendArtnet(184, 255);
            //MIDI.sendNoteMessage((short)0, (short)28, (short)127, false);
        else if(me.getSource().equals(buttonMove))
            Artnet.Get().sendArtnet(185, 255);
            //MIDI.sendNoteMessage((short)0, (short)29, (short)127, false);
        else if(me.getSource().equals(buttonPrvw))
            Artnet.Get().sendArtnet(186, 255);
            //MIDI.sendNoteMessage((short)0, (short)30, (short)127, false);
        else if(me.getSource().equals(buttonAssign))
            Artnet.Get().sendArtnet(187, 255);
            //MIDI.sendNoteMessage((short)0, (short)31, (short)127, false);
        else if(me.getSource().equals(buttonAlign))
            Artnet.Get().sendArtnet(188, 255);
            //MIDI.sendNoteMessage((short)0, (short)32, (short)127, false);
        
        //Block 4
         else if(me.getSource().equals(buttonTime))
             Artnet.Get().sendArtnet(189, 255);
            //MIDI.sendNoteMessage((short)0, (short)33, (short)127, false);
        else if(me.getSource().equals(buttonEsc))
            Artnet.Get().sendArtnet(190, 255);
            //MIDI.sendNoteMessage((short)0, (short)34, (short)127, false);
        else if(me.getSource().equals(buttonEdit))
            Artnet.Get().sendArtnet(191, 255);
            //MIDI.sendNoteMessage((short)0, (short)35, (short)127, false);
        else if(me.getSource().equals(buttonOops))
            Artnet.Get().sendArtnet(192, 255);
            //MIDI.sendNoteMessage((short)0, (short)36, (short)127, false);
        else if(me.getSource().equals(buttonUpdate))
            Artnet.Get().sendArtnet(193, 255);
            //MIDI.sendNoteMessage((short)0, (short)37, (short)127, false);
        else if(me.getSource().equals(buttonClear))
            Artnet.Get().sendArtnet(194, 255);
            //MIDI.sendNoteMessage((short)0, (short)38, (short)127, false);
        else if(me.getSource().equals(buttonStore))
            Artnet.Get().sendArtnet(195, 255);
            //MIDI.sendNoteMessage((short)0, (short)39, (short)127, false);
        
        //Block 5
        else if(me.getSource().equals(button7))
            Artnet.Get().sendArtnet(196, 255);
            //MIDI.sendNoteMessage((short)0, (short)40, (short)127, false);
        else if(me.getSource().equals(button8))
            Artnet.Get().sendArtnet(197, 255);
            //MIDI.sendNoteMessage((short)0, (short)41, (short)127, false);
        else if(me.getSource().equals(button9))
            Artnet.Get().sendArtnet(198, 255);
            //MIDI.sendNoteMessage((short)0, (short)42, (short)127, false);
        else if(me.getSource().equals(buttonPlus))
            Artnet.Get().sendArtnet(199, 255);
            //MIDI.sendNoteMessage((short)0, (short)43, (short)127, false);
        else if(me.getSource().equals(button4))
            Artnet.Get().sendArtnet(200, 255);
            //MIDI.sendNoteMessage((short)0, (short)44, (short)127, false);
        else if(me.getSource().equals(button5))
            Artnet.Get().sendArtnet(201, 255);
            //MIDI.sendNoteMessage((short)0, (short)45, (short)127, false);
        else if(me.getSource().equals(button6))
            Artnet.Get().sendArtnet(202, 255);
            //MIDI.sendNoteMessage((short)0, (short)46, (short)127, false);
        else if(me.getSource().equals(buttonThru))
            Artnet.Get().sendArtnet(203, 255);
            //MIDI.sendNoteMessage((short)0, (short)47, (short)127, false);
        else if(me.getSource().equals(button1))
            Artnet.Get().sendArtnet(204, 255);
            //MIDI.sendNoteMessage((short)0, (short)48, (short)127, false);
        else if(me.getSource().equals(button2))
            Artnet.Get().sendArtnet(205, 255);
            //MIDI.sendNoteMessage((short)0, (short)49, (short)127, false);
        else if(me.getSource().equals(button3))
            Artnet.Get().sendArtnet(206, 255);
            //MIDI.sendNoteMessage((short)0, (short)50, (short)127, false);
        else if(me.getSource().equals(buttonMinus))
            Artnet.Get().sendArtnet(207, 255);
            //MIDI.sendNoteMessage((short)0, (short)51, (short)127, false);
        else if(me.getSource().equals(button0))
            Artnet.Get().sendArtnet(208, 255);
            //MIDI.sendNoteMessage((short)0, (short)52, (short)127, false);
        else if(me.getSource().equals(buttonDot))
            Artnet.Get().sendArtnet(209, 255);
            //MIDI.sendNoteMessage((short)0, (short)53, (short)127, false);
        else if(me.getSource().equals(buttonIf))
            Artnet.Get().sendArtnet(210, 255);
            //MIDI.sendNoteMessage((short)0, (short)54, (short)127, false);
        else if(me.getSource().equals(buttonAt))
            Artnet.Get().sendArtnet(211, 255);
            //MIDI.sendNoteMessage((short)0, (short)55, (short)127, false);
        else if(me.getSource().equals(buttonMa))
            Artnet.Get().sendArtnet(212, 255);
            //MIDI.sendNoteMessage((short)0, (short)56, (short)127, false);
        else if(me.getSource().equals(buttonPlease))
            Artnet.Get().sendArtnet(213, 255);
            //MIDI.sendNoteMessage((short)0, (short)57, (short)127, false);
        
        //Block 6
        else if(me.getSource().equals(buttonFull))
            Artnet.Get().sendArtnet(214, 255);
            //MIDI.sendNoteMessage((short)0, (short)58, (short)127, false);
        else if(me.getSource().equals(buttonHighlt))
            Artnet.Get().sendArtnet(215, 255);
            //MIDI.sendNoteMessage((short)0, (short)59, (short)127, false);
        else if(me.getSource().equals(buttonSolo))
            Artnet.Get().sendArtnet(216, 255);
            //MIDI.sendNoteMessage((short)0, (short)60, (short)127, false);
        else if(me.getSource().equals(buttonUp))
            Artnet.Get().sendArtnet(217, 255);
            //MIDI.sendNoteMessage((short)0, (short)61, (short)127, false);
        else if(me.getSource().equals(buttonPrev))
            Artnet.Get().sendArtnet(218, 255);
            //MIDI.sendNoteMessage((short)0, (short)62, (short)127, false);
        else if(me.getSource().equals(buttonSet))
            Artnet.Get().sendArtnet(219, 255);
            //MIDI.sendNoteMessage((short)0, (short)63, (short)127, false);
        else if(me.getSource().equals(buttonNext))
            Artnet.Get().sendArtnet(220, 255);
            //MIDI.sendNoteMessage((short)0, (short)64, (short)127, false);
        else if(me.getSource().equals(buttonDown))
            Artnet.Get().sendArtnet(221, 255);
            //MIDI.sendNoteMessage((short)0, (short)65, (short)127, false);
        
        //Block 7
        else if(me.getSource().equals(buttonTools))
            Artnet.Get().sendArtnet(222, 255);
            //MIDI.sendNoteMessage((short)0, (short)66, (short)127, false);
        else if(me.getSource().equals(buttonSetup)) {
            Artnet.Get().sendArtnet(223, 255);
            GrandPAHost.SendKey(Constants.HardwareKey.SETUP, true);
            GrandPAHost.SendKey(Constants.HardwareKey.SETUP, false);
            }
            //MIDI.sendNoteMessage((short)0, (short)67, (short)127, false);
        else if(me.getSource().equals(buttonBackup))
            Artnet.Get().sendArtnet(224, 255);
            //MIDI.sendNoteMessage((short)0, (short)68, (short)127, false);
        else if(me.getSource().equals(buttonBlackout))
            Artnet.Get().sendArtnet(225, 255);
            //MIDI.sendNoteMessage((short)0, (short)69, (short)127, false);
    }

    @Override
    public void mouseReleased(MouseEvent me)
    {
        //BLOCK 1
        if(me.getSource().equals(buttonFix))
            Artnet.Get().sendArtnet(157, 0);
            //MIDI.sendNoteMessage((short)0, (short)1, (short)0, true);
        else if(me.getSource().equals(buttonSelect))
            Artnet.Get().sendArtnet(158, 0);
            //MIDI.sendNoteMessage((short)0, (short)2, (short)0, true);
        else if(me.getSource().equals(buttonOff))
            Artnet.Get().sendArtnet(159, 0);
            //MIDI.sendNoteMessage((short)0, (short)3, (short)0, true);
        else if(me.getSource().equals(buttonTemp))
            Artnet.Get().sendArtnet(160, 0);
            //MIDI.sendNoteMessage((short)0, (short)4, (short)0, true);
        else if(me.getSource().equals(buttonTop))
            Artnet.Get().sendArtnet(161, 0);
            //MIDI.sendNoteMessage((short)0, (short)5, (short)0, true);
        else if(me.getSource().equals(buttonOn))
            Artnet.Get().sendArtnet(162, 0);
            //MIDI.sendNoteMessage((short)0, (short)6, (short)0, true);
        else if(me.getSource().equals(buttonBackFast))
            Artnet.Get().sendArtnet(163, 0);
            //MIDI.sendNoteMessage((short)0, (short)7, (short)0, true);
        else if(me.getSource().equals(buttonLearn))
            Artnet.Get().sendArtnet(164, 0);
            //MIDI.sendNoteMessage((short)0, (short)8, (short)0, true);
        else if(me.getSource().equals(buttonForwardFast))
            Artnet.Get().sendArtnet(165, 0);
            //MIDI.sendNoteMessage((short)0, (short)9, (short)0, true);
        else if(me.getSource().equals(buttonGoMinus))
            Artnet.Get().sendArtnet(166, 0);
            //MIDI.sendNoteMessage((short)0, (short)10, (short)0, true);
        else if(me.getSource().equals(buttonPause))
            Artnet.Get().sendArtnet(167, 0);
            //MIDI.sendNoteMessage((short)0, (short)11, (short)0, true);
        else if(me.getSource().equals(buttonGoPlus))
            Artnet.Get().sendArtnet(168, 0);
            //MIDI.sendNoteMessage((short)0, (short)12, (short)0, true);
        
         //Block 2
         else if(me.getSource().equals(buttonView))
             Artnet.Get().sendArtnet(169, 0);
            //MIDI.sendNoteMessage((short)0, (short)13, (short)0, true);
        else if(me.getSource().equals(buttonEffect))
            Artnet.Get().sendArtnet(170, 0);
            //MIDI.sendNoteMessage((short)0, (short)14, (short)0, true);
        else if(me.getSource().equals(buttonGoto))
            Artnet.Get().sendArtnet(171, 0);
            //MIDI.sendNoteMessage((short)0, (short)15, (short)0, true);
        else if(me.getSource().equals(buttonPage))
            Artnet.Get().sendArtnet(172, 0);
            //MIDI.sendNoteMessage((short)0, (short)16, (short)0, true);
        else if(me.getSource().equals(buttonMacro))
            Artnet.Get().sendArtnet(173, 0);
            //MIDI.sendNoteMessage((short)0, (short)17, (short)0, true);
        else if(me.getSource().equals(buttonPreset))
            Artnet.Get().sendArtnet(174, 0);
            //MIDI.sendNoteMessage((short)0, (short)18, (short)0, true);
        else if(me.getSource().equals(buttonSequ))
            Artnet.Get().sendArtnet(175, 0);
            //MIDI.sendNoteMessage((short)0, (short)19, (short)0, true);
        else if(me.getSource().equals(buttonCue))
            Artnet.Get().sendArtnet(176, 0);
            //MIDI.sendNoteMessage((short)0, (short)20, (short)0, true);
        else if(me.getSource().equals(buttonExec))
            Artnet.Get().sendArtnet(177, 0);
            //MIDI.sendNoteMessage((short)0, (short)21, (short)0, true);
        else if(me.getSource().equals(buttonChannel))
            Artnet.Get().sendArtnet(178, 0);
            //MIDI.sendNoteMessage((short)0, (short)22, (short)0, true);
        else if(me.getSource().equals(buttonFixture))
            Artnet.Get().sendArtnet(179, 0);
            //MIDI.sendNoteMessage((short)0, (short)23, (short)0, true);
        else if(me.getSource().equals(buttonGroup))
            Artnet.Get().sendArtnet(180, 0);
            //MIDI.sendNoteMessage((short)0, (short)24, (short)0, true);
        
        //Block 3
         else if(me.getSource().equals(buttonDel))
             Artnet.Get().sendArtnet(181, 0);
            //MIDI.sendNoteMessage((short)0, (short)25, (short)0, true);
        else if(me.getSource().equals(buttonBlind))
            Artnet.Get().sendArtnet(182, 0);
            //MIDI.sendNoteMessage((short)0, (short)26, (short)0, true);
        else if(me.getSource().equals(buttonCopy))
            Artnet.Get().sendArtnet(183, 0);
            //MIDI.sendNoteMessage((short)0, (short)27, (short)0, true);
        else if(me.getSource().equals(buttonFreeze))
            Artnet.Get().sendArtnet(184, 0);
            //MIDI.sendNoteMessage((short)0, (short)28, (short)0, true);
        else if(me.getSource().equals(buttonMove))
            Artnet.Get().sendArtnet(185, 0);
            //MIDI.sendNoteMessage((short)0, (short)29, (short)0, true);
        else if(me.getSource().equals(buttonPrvw))
            Artnet.Get().sendArtnet(186, 0);
            //MIDI.sendNoteMessage((short)0, (short)30, (short)0, true);
        else if(me.getSource().equals(buttonAssign))
            Artnet.Get().sendArtnet(187, 0);
            //MIDI.sendNoteMessage((short)0, (short)31, (short)0, true);
        else if(me.getSource().equals(buttonAlign))
            Artnet.Get().sendArtnet(188, 0);
            //MIDI.sendNoteMessage((short)0, (short)32, (short)0, true);
        
        //Block 4
         else if(me.getSource().equals(buttonTime))
             Artnet.Get().sendArtnet(189, 0);
            //MIDI.sendNoteMessage((short)0, (short)33, (short)0, true);
        else if(me.getSource().equals(buttonEsc))
        {
            GrandPAHost.SendKey(Constants.HardwareKey.ESC, true);
            GrandPAHost.SendKey(Constants.HardwareKey.ESC, false);
            Artnet.Get().sendArtnet(190, 0);
        }

            //MIDI.sendNoteMessage((short)0, (short)34, (short)0, true);
        else if(me.getSource().equals(buttonEdit))
            Artnet.Get().sendArtnet(191, 0);
            //MIDI.sendNoteMessage((short)0, (short)35, (short)0, true);
        else if(me.getSource().equals(buttonOops))
            Artnet.Get().sendArtnet(192, 0);
            //MIDI.sendNoteMessage((short)0, (short)36, (short)0, true);
        else if(me.getSource().equals(buttonUpdate))
            Artnet.Get().sendArtnet(193, 0);
            //MIDI.sendNoteMessage((short)0, (short)37, (short)0, true);
        else if(me.getSource().equals(buttonClear))
            Artnet.Get().sendArtnet(194, 0);
            //MIDI.sendNoteMessage((short)0, (short)38, (short)0, true);
        else if(me.getSource().equals(buttonStore))
            Artnet.Get().sendArtnet(195, 0);
            //MIDI.sendNoteMessage((short)0, (short)39, (short)0, true);
        
        //Block 5
        else if(me.getSource().equals(button7))
            Artnet.Get().sendArtnet(196, 0);
            //MIDI.sendNoteMessage((short)0, (short)40, (short)0, true);
        else if(me.getSource().equals(button8))
            Artnet.Get().sendArtnet(197, 0);
            //MIDI.sendNoteMessage((short)0, (short)41, (short)0, true);
        else if(me.getSource().equals(button9))
            Artnet.Get().sendArtnet(198, 0);
            //MIDI.sendNoteMessage((short)0, (short)42, (short)0, true);
        else if(me.getSource().equals(buttonPlus))
            Artnet.Get().sendArtnet(199, 0);
            //MIDI.sendNoteMessage((short)0, (short)43, (short)0, true);
        else if(me.getSource().equals(button4))
            Artnet.Get().sendArtnet(200, 0);
            //MIDI.sendNoteMessage((short)0, (short)44, (short)0, true);
        else if(me.getSource().equals(button5))
            Artnet.Get().sendArtnet(201, 0);
            //MIDI.sendNoteMessage((short)0, (short)45, (short)0, true);
        else if(me.getSource().equals(button6))
            Artnet.Get().sendArtnet(202, 0);
            //MIDI.sendNoteMessage((short)0, (short)46, (short)0, true);
        else if(me.getSource().equals(buttonThru))
            Artnet.Get().sendArtnet(203, 0);
            //MIDI.sendNoteMessage((short)0, (short)47, (short)0, true);
        else if(me.getSource().equals(button1))
            Artnet.Get().sendArtnet(204, 0);
            //MIDI.sendNoteMessage((short)0, (short)48, (short)0, true);
        else if(me.getSource().equals(button2))
            Artnet.Get().sendArtnet(205, 0);
            //MIDI.sendNoteMessage((short)0, (short)49, (short)0, true);
        else if(me.getSource().equals(button3))
            Artnet.Get().sendArtnet(206, 0);
            //MIDI.sendNoteMessage((short)0, (short)50, (short)0, true);
        else if(me.getSource().equals(buttonMinus))
            Artnet.Get().sendArtnet(207, 0);
            //MIDI.sendNoteMessage((short)0, (short)51, (short)0, true);
        else if(me.getSource().equals(button0))
            Artnet.Get().sendArtnet(208, 0);
            //MIDI.sendNoteMessage((short)0, (short)52, (short)0, true);
        else if(me.getSource().equals(buttonDot))
            Artnet.Get().sendArtnet(209, 0);
            //MIDI.sendNoteMessage((short)0, (short)53, (short)0, true);
        else if(me.getSource().equals(buttonIf))
            Artnet.Get().sendArtnet(210, 0);
            //MIDI.sendNoteMessage((short)0, (short)54, (short)0, true);
        else if(me.getSource().equals(buttonAt))
            Artnet.Get().sendArtnet(211, 0);
            //MIDI.sendNoteMessage((short)0, (short)55, (short)0, true);
        else if(me.getSource().equals(buttonMa))
            Artnet.Get().sendArtnet(212, 0);
            //MIDI.sendNoteMessage((short)0, (short)56, (short)0, true);
        else if(me.getSource().equals(buttonPlease))
            Artnet.Get().sendArtnet(213, 0);
            //MIDI.sendNoteMessage((short)0, (short)57, (short)0, true);
        
        //Block 6
        else if(me.getSource().equals(buttonFull))
            Artnet.Get().sendArtnet(214, 0);
            //MIDI.sendNoteMessage((short)0, (short)58, (short)0, true);
        else if(me.getSource().equals(buttonHighlt))
            Artnet.Get().sendArtnet(215, 0);
            //MIDI.sendNoteMessage((short)0, (short)59, (short)0, true);
        else if(me.getSource().equals(buttonSolo))
            Artnet.Get().sendArtnet(216, 0);
            //MIDI.sendNoteMessage((short)0, (short)60, (short)0, true);
        else if(me.getSource().equals(buttonUp))
            Artnet.Get().sendArtnet(217, 0);
            //MIDI.sendNoteMessage((short)0, (short)61, (short)0, true);
        else if(me.getSource().equals(buttonPrev))
            Artnet.Get().sendArtnet(218, 0);
            //MIDI.sendNoteMessage((short)0, (short)62, (short)0, true);
        else if(me.getSource().equals(buttonSet))
            Artnet.Get().sendArtnet(219, 0);
            //MIDI.sendNoteMessage((short)0, (short)63, (short)0, true);
        else if(me.getSource().equals(buttonNext))
            Artnet.Get().sendArtnet(220, 0);
            //MIDI.sendNoteMessage((short)0, (short)64, (short)0, true);
        else if(me.getSource().equals(buttonDown))
            Artnet.Get().sendArtnet(221, 0);
            //MIDI.sendNoteMessage((short)0, (short)65, (short)0, true);
        
        //Block 7
        else if(me.getSource().equals(buttonTools))
            Artnet.Get().sendArtnet(222, 0);
            //MIDI.sendNoteMessage((short)0, (short)66, (short)0, true);
        else if(me.getSource().equals(buttonSetup))
            Artnet.Get().sendArtnet(223, 0);
            //MIDI.sendNoteMessage((short)0, (short)67, (short)0, true);
        else if(me.getSource().equals(buttonBackup))
            Artnet.Get().sendArtnet(224, 0);
            //MIDI.sendNoteMessage((short)0, (short)68, (short)0, true);
        else if(me.getSource().equals(buttonBlackout))
            Artnet.Get().sendArtnet(225, 0);
            //MIDI.sendNoteMessage((short)0, (short)69, (short)0, true);
    }

    @Override
    public void mouseEntered(MouseEvent me)
    {
        
    }

    @Override
    public void mouseExited(MouseEvent me)
    {
      
    }

    @Override
    public void stateChanged(ChangeEvent ce)
    {
        if(ce.getSource().equals(sliderGrandMaster))
            GrandPAHost.Send("SpecialMaster \"grandmaster\" . \"grand\" At " + ((double)sliderGrandMaster.getValue()/10.0), false);
    }
}
